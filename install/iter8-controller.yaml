# Generated by make build-default; DO NOT EDIT
---
# Source: iter8-controller/templates/default/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: iter8

---
# Source: iter8-controller/templates/metrics/iter8_metrics.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: iter8config-metrics
  namespace: iter8
data:
  counter_metrics.yaml: |-
    - name: iter8_request_count
      query_template: sum(increase(istio_requests_total{reporter='source'}[$interval])) by ($version_labels)
    - name: iter8_total_latency
      query_template: sum(increase(istio_request_duration_seconds_sum{reporter='source'}[$interval])) by ($version_labels)
      units: s # optional
    - name: iter8_error_count
      query_template: sum(increase(istio_requests_total{response_code=~'5..',reporter='source'}[$interval])) by ($version_labels)
      preferred_direction: lower
    - name: conversion_count
      query_template: sum(increase(newsletter_signups[$interval])) by ($version_labels)
  # the value of a ratio metric equals value of numerator divided by denominator
  ratio_metrics.yaml: |-
    - name: iter8_mean_latency
      numerator: iter8_total_latency
      denominator: iter8_request_count
      preferred_direction: lower
    - name: iter8_error_rate
      numerator: iter8_error_count
      denominator: iter8_request_count
      preferred_direction: lower
      zero_to_one: true
    - name: conversion_rate
      numerator: conversion_count
      denominator: iter8_request_count
      preferred_direction: higher
      zero_to_one: true

---
# Source: iter8-controller/templates/notifier/iter8_notifiers.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: iter8config-notifiers
  namespace: iter8
data:
#####################################################################
## Add notifier channel info here 
## Example:
## channel1: |-
##    notifier: slack
##    url: https://hooks.slack.com/services/TXXXXX/BXXXXXX/xxxxxxxx
##    level: normal
######################################################################
  

---
# Source: iter8-controller/templates/default/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: iter8-controller
  namespace: iter8

---
# Source: iter8-controller/templates/crds/v1alpha1/iter8.tools_experiments.yaml

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: experiments.iter8.tools
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase of the experiment
    format: byte
    name: phase
    type: string
  - JSONPath: .status.message
    description: Detailed Status of the experiment
    format: byte
    name: status
    type: string
  - JSONPath: .spec.targetService.baseline
    description: Name of baseline
    format: byte
    name: baseline
    type: string
  - JSONPath: .status.trafficSplitPercentage.baseline
    description: Traffic percentage for baseline
    format: int32
    name: percentage
    type: integer
  - JSONPath: .spec.targetService.candidate
    description: Name of candidate
    format: byte
    name: candidate
    type: string
  - JSONPath: .status.trafficSplitPercentage.candidate
    description: Traffic percentage for candidate
    format: int32
    name: percentage
    type: integer
  group: iter8.tools
  names:
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Experiment is the Schema for the experiments API
      properties:
        action:
          description: 'Action provides user an option to take action in the experiment
            pause: pause the progress of experiment resume: resume the experiment
            override_failure: force the experiment to failure status override_success:
            force the experiment to success status'
          enum:
          - pause
          - resume
          - override_failure
          - override_success
          type: string
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        metrics:
          additionalProperties:
            description: ExperimentMetric stores details of a metric query template
              to
            properties:
              absent_value:
                description: AbsentValue  is default value when data source does not
                  provide a value
                type: string
              is_counter:
                description: IsCounter indicates metric is a monotonically increasing
                  counter
                type: boolean
              query_template:
                description: QueryTemplate is the query template for metric
                type: string
              sample_size_template:
                description: SampleSizeTemplate is the query template for sample size
                type: string
            required:
            - absent_value
            - is_counter
            - query_template
            - sample_size_template
            type: object
          description: ExperimentMetrics is a map from metric name to metric definition
          type: object
        spec:
          description: ExperimentSpec defines the desired state of Experiment
          properties:
            analysis:
              description: Analysis parameters
              properties:
                analyticsService:
                  description: AnalyticsService endpoint
                  type: string
                grafanaEndpoint:
                  description: Grafana Dashboard endpoint
                  type: string
                reward:
                  description: The reward used by analytics to assess candidate
                  properties:
                    metricName:
                      description: 'Name of the metric to which the criterion applies.
                        Options:'
                      type: string
                    min_max:
                      description: Minimum and maximum values of the metric
                      properties:
                        max:
                          description: Max maximum possible value of the metric
                          format: float64
                          type: number
                        min:
                          description: Min minimum possible value of the metric
                          format: float64
                          type: number
                      required:
                      - max
                      - min
                      type: object
                  required:
                  - metricName
                  type: object
                successCriteria:
                  description: List of criteria for assessing the candidate version
                  items:
                    description: SuccessCriterion specifies the criteria for an experiment
                      to succeed
                    properties:
                      metricName:
                        description: 'Name of the metric to which the criterion applies.
                          Options:'
                        type: string
                      min_max:
                        description: Minimum and maximum values of the metric
                        properties:
                          max:
                            description: Max maximum possible value of the metric
                            format: float64
                            type: number
                          min:
                            description: Min minimum possible value of the metric
                            format: float64
                            type: number
                        required:
                        - max
                        - min
                        type: object
                      sampleSize:
                        description: Minimum number of data points required to make
                          a decision based on this criterion; If not specified, the
                          default value is 10
                        type: integer
                      stopOnFailure:
                        description: Indicates whether or not the experiment must
                          finish if this criterion is not satisfied; defaults to false
                        type: boolean
                      tolerance:
                        description: Value to check
                        format: float64
                        type: number
                      toleranceType:
                        description: "\tTolerance type. Options: \"delta\": compares
                          the candidate against the baseline version with respect
                          to the metric; \"threshold\": checks the candidate with
                          respect to the metric"
                        enum:
                        - threshold
                        - delta
                        type: string
                    required:
                    - metricName
                    - tolerance
                    - toleranceType
                    type: object
                  type: array
              type: object
            cleanup:
              description: CleanUp is a flag to determine the action to take at the
                end of experiment
              enum:
              - delete
              type: string
            routingReference:
              description: RoutingReference provides references to routing rules set
                by users
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            targetService:
              description: TargetService is a reference to an object to use as target
                service
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                baseline:
                  description: Baseline tells the name of baseline
                  type: string
                candidate:
                  description: Candidate tells the name of candidate
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            trafficControl:
              description: TrafficControl defines parameters for controlling the traffic
              properties:
                confidence:
                  description: The required confidence in the recommeded traffic split.
                    Defaults to 0.95
                  format: float64
                  type: number
                interval:
                  description: Interval is the time in second before the next increment.
                    Default is 1mn
                  type: string
                maxIterations:
                  description: Maximum number of iterations for this experiment. Default
                    to 100.
                  type: integer
                maxTrafficPercentage:
                  description: MaxTrafficPercentage is the maximum traffic ratio to
                    send to the candidate. Default is 50
                  format: float64
                  type: number
                onSuccess:
                  description: 'Determines how the traffic must be split at the end
                    of the experiment; options: "baseline": all traffic goes to the
                    baseline version; "candidate": all traffic goes to the candidate
                    version; "both": traffic is split across baseline and candidate.
                    Defaults to “candidate”'
                  enum:
                  - baseline
                  - candidate
                  - both
                  type: string
                strategy:
                  description: 'Strategy is the strategy used for experiment. Options:
                    "check_and_increment": get decision on traffic increament from
                    analytics "increment_without_check": increase traffic each interval
                    without calling analytics'
                  enum:
                  - check_and_increment
                  - increment_without_check
                  - epsilon_greedy
                  - posterior_bayesian_routing
                  - optimistic_bayesian_routing
                  type: string
                trafficStepSize:
                  description: TrafficStepSize is the traffic increment per interval.
                    Default is 2.0
                  format: float64
                  type: number
              type: object
          required:
          - targetService
          type: object
        status:
          description: ExperimentStatus defines the observed state of Experiment
          properties:
            analysisState:
              description: AnalysisState is the last analysis state
              type: object
            assessment:
              description: AssessmentSummary returned by the last analyis
              properties:
                abort_experiment:
                  description: Indicates whether or not the experiment must be aborted
                    based on the success criteria
                  type: boolean
                all_success_criteria_met:
                  description: Indicates whether or not all success criteria for assessing
                    the candidate version have been met
                  type: boolean
                conclusions:
                  description: Overall summary based on all success criteria
                  items:
                    type: string
                  type: array
                success_criteria:
                  description: The list of status for all success criteria applied
                  items:
                    description: SuccessCriterionStatus contains assessment for a
                      specific success criteria
                    properties:
                      abort_experiment:
                        description: Indicates whether or not the experiment must
                          be aborted on the basis of the criterion for this metric
                        type: boolean
                      conclusions:
                        description: Assessment of this success criteria in plain
                          English
                        items:
                          type: string
                        type: array
                      metric_name:
                        description: 'Name of the metric to which the criterion applies
                          example: iter8_latency'
                        type: string
                      success_criterion_met:
                        description: Indicates whether or not the success criterion
                          for the corresponding metric has been met
                        type: boolean
                    required:
                    - abort_experiment
                    - conclusions
                    - metric_name
                    - success_criterion_met
                    type: object
                  type: array
              type: object
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    properties:
                      inner:
                        format: date-time
                        type: string
                    required:
                    - inner
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            createTimestamp:
              description: CreateTimestamp is the timestamp when the experiment is
                created
              format: int64
              type: integer
            currentIteration:
              description: CurrentIteration is the current iteration number
              type: integer
            endTimestamp:
              description: EndTimestamp is the timestamp when experiment completes
              format: int64
              type: integer
            grafanaURL:
              description: GrafanaURL is the url to the Grafana Dashboard
              type: string
            lastIncrementTime:
              description: LastIncrementTime is the last time the traffic has been
                incremented
              format: date-time
              type: string
            message:
              description: Message specifies message to show in the kubectl printer
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            phase:
              description: Phase marks the Phase the experiment is at
              type: string
            startTimestamp:
              description: StartTimestamp is the timestamp when the experiment starts
              format: int64
              type: integer
            trafficSplitPercentage:
              description: TrafficSplit tells the current traffic spliting between
                baseline and candidate
              properties:
                baseline:
                  type: integer
                candidate:
                  type: integer
              required:
              - baseline
              - candidate
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: iter8-controller/templates/crds/v1alpha2/iter8.tools_experiments.yaml

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: experiments.iter8.tools
spec:
  group: iter8.tools
  names:
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Experiment contains the sections for -- defining an experiment,
        showing experiment status,
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExperimentSpec defines the desired state of Experiment
          properties:
            analyticsEndpoint:
              description: Endpoint of reaching analytics service default is http://iter8-analytics.iter8:8080
              type: string
            cleanup:
              description: Cleanup indicates whether routing rules and deployment
                receiving no traffic should be deleted at the end of experiment
              type: boolean
            criteria:
              description: Criteria contains a list of Criterion for assessing the
                target service Noted that at most one reward metric is allowed If
                more than one reward criterion is included, the first would be used
                while others would be omitted
              items:
                description: Criterion defines the criterion for assessing a target
                properties:
                  isReward:
                    description: IsReward indicates whether the metric is a reward
                      metric or not
                    type: boolean
                  metric:
                    description: Name of metric used in the assessment
                    type: string
                  threshold:
                    description: Threshold specifies the numerical value for a success
                      criterion Metric value above threhsold violates the criterion
                    properties:
                      cutoffTrafficOnViolation:
                        description: Once a target metric violates this threshold,
                          traffic to the target should be cutoff or not
                        type: boolean
                      type:
                        description: 'Type of threshold relative: value of threshold
                          specifies the relative amount of changes absolute: value
                          of threshold indicates an absolute value'
                        enum:
                        - relative
                        - absolute
                        type: string
                      value:
                        description: Value of threshold
                        format: float64
                        type: number
                    required:
                    - type
                    - value
                    type: object
                required:
                - metric
                type: object
              type: array
            duration:
              description: Duration specifies how often/many times the expriment should
                re-evaluate the assessment
              properties:
                interval:
                  description: Interval specifies duration between iterations default
                    is 30s
                  type: string
                maxIterations:
                  description: MaxIterations indicates the amount of iteration default
                    is 100
                  format: int32
                  type: integer
              type: object
            manualOverride:
              description: User actions to override the current status of the experiment
              properties:
                action:
                  description: Action to perform
                  enum:
                  - pause
                  - resume
                  - terminate
                  type: string
                trafficSplit:
                  additionalProperties:
                    format: int32
                    type: integer
                  description: 'Traffic split status specification Applied to action
                    terminate only example:   reviews-v2:80   reviews-v3:20'
                  type: object
              required:
              - action
              type: object
            metrics:
              description: The metrics used in the experiment
              properties:
                counter_metrics:
                  description: List of counter metrics definiton
                  items:
                    description: CounterMetric is the definition of Counter Metric
                    properties:
                      name:
                        description: Name of metric
                        type: string
                      preferred_direction:
                        description: Preferred direction of the metric value
                        type: string
                      query_template:
                        description: Query template of this metric
                        type: string
                      unit:
                        description: Unit of the metric value
                        type: string
                    required:
                    - name
                    - query_template
                    type: object
                  type: array
                ratio_metrics:
                  description: List of ratio metrics definiton
                  items:
                    description: RatioMetric is the definiton of Ratio Metric
                    properties:
                      denominator:
                        description: Counter metric used in denominator
                        type: string
                      name:
                        description: name of metric
                        type: string
                      numerator:
                        description: Counter metric used in numerator
                        type: string
                      preferred_direction:
                        description: Preferred direction of the metric value
                        type: string
                      zero_to_one:
                        description: Boolean flag indicating if the value of this
                          metric is always in the range 0 to 1
                        type: boolean
                    required:
                    - denominator
                    - name
                    - numerator
                    type: object
                  type: array
              type: object
            routingReference:
              description: RoutingReference provides references to routing rules set
                by users
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            service:
              description: Service is a reference to the service that this experiment
                is targeting at
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                baseline:
                  description: Name of the baseline deployment
                  type: string
                candidates:
                  description: List of names of candidate deployments
                  items:
                    type: string
                  type: array
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              required:
              - baseline
              - candidates
              type: object
            trafficControl:
              description: TrafficControl provides instructions on traffic management
                for an experiment
              properties:
                match:
                  description: Only requests fulfill the match section would be used
                    in experiment Istio matching rules are used
                  properties:
                    http:
                      description: Matching criteria for HTTP requests
                      items:
                        properties:
                          authority:
                            description: HTTP Authority
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                type: string
                            type: object
                          gateways:
                            description: Gateways for matching
                            items:
                              type: string
                            type: array
                          headers:
                            additionalProperties:
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  type: string
                              type: object
                            description: Headers to match
                            type: object
                          ignore_uri_case:
                            description: Flag to specify whether the URI matching
                              should be case-insensitive.
                            type: boolean
                          method:
                            description: HTTP Method
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                type: string
                            type: object
                          name:
                            description: The name assigned to a match.
                            type: string
                          port:
                            description: Specifies the ports on the host that is being
                              addressed.
                            format: int32
                            type: integer
                          query_params:
                            additionalProperties:
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  type: string
                              type: object
                            description: Query parameters for matching.
                            type: object
                          scheme:
                            description: Scheme Scheme
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                type: string
                            type: object
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: SourceLabels for matching
                            type: object
                          uri:
                            description: URI to match
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                maxIncrement:
                  description: MaxIncrement is the upperlimit of traffic increment
                    for a target in one iteration default is 2
                  format: int32
                  type: integer
                onTermination:
                  description: OnTermination determines traffic split status at the
                    end of experiment
                  enum:
                  - to_winner
                  - to_baseline
                  - keep_last
                  type: string
                percentage:
                  description: Percentage specifies the amount of traffic to service
                    that would be used in experiment default is 100
                  format: int32
                  type: integer
                strategy:
                  description: Strategy used to shift traffic default is progressive
                  enum:
                  - progressive
                  - top_2
                  - uniform
                  type: string
              type: object
          required:
          - service
          type: object
        status:
          description: ExperimentStatus defines the observed state of Experiment
          properties:
            analysisState:
              description: AnalysisState is the last recorded analysis state
              type: object
            assessment:
              description: Assessment returned by the last analyis
              properties:
                baseline:
                  description: Assessment details of baseline
                  properties:
                    criterion_assessments:
                      items:
                        description: CriterionAssessment contains assessment for a
                          version
                        properties:
                          id:
                            description: Id of version
                            type: string
                          metric_id:
                            description: ID of metric
                            type: string
                          statistics:
                            description: Statistics for this metric
                            properties:
                              ratio_statitics:
                                description: RatioStatistics is statistics for a ratio
                                  metric
                                properties:
                                  credible_interval:
                                    description: Interval for probability
                                    properties:
                                      lower:
                                        format: float64
                                        type: number
                                      upper:
                                        format: float64
                                        type: number
                                    required:
                                    - lower
                                    - upper
                                    type: object
                                  improvement_over_baseline:
                                    description: Interval for probability
                                    properties:
                                      lower:
                                        format: float64
                                        type: number
                                      upper:
                                        format: float64
                                        type: number
                                    required:
                                    - lower
                                    - upper
                                    type: object
                                  probability_of_beating_baseline:
                                    format: float64
                                    type: number
                                  probability_of_being_best_version:
                                    format: float64
                                    type: number
                                required:
                                - credible_interval
                                - improvement_over_baseline
                                - probability_of_beating_baseline
                                - probability_of_being_best_version
                                type: object
                              value:
                                format: float64
                                type: number
                            type: object
                          threshold_assessment:
                            description: Assessment of how well this metric is doing
                              with respect to threshold. Defined only for metrics
                              with a threshold
                            properties:
                              probability_of_satisfying_threshold:
                                description: Probability of satisfying the threshold.
                                  Defined only for ratio metrics. This is currently
                                  computed based on Bayesian estimation
                                format: float64
                                type: number
                              threshold_breached:
                                description: A flag indicating whether threshold is
                                  breached
                                type: boolean
                            required:
                            - probability_of_satisfying_threshold
                            - threshold_breached
                            type: object
                        required:
                        - id
                        - metric_id
                        type: object
                      type: array
                    id:
                      type: string
                    name:
                      description: name of version
                      type: string
                    request_count:
                      format: int32
                      type: integer
                    rollback:
                      description: A flag indicates whether traffic to this target
                        should be cutoff
                      type: boolean
                    weight:
                      description: Weight of traffic
                      format: int32
                      type: integer
                    win_probability:
                      format: float64
                      type: number
                  required:
                  - id
                  - name
                  - request_count
                  - weight
                  - win_probability
                  type: object
                candidates:
                  description: Assessment details of each candidate
                  items:
                    description: VersionAssessment contains assessment details for
                      each version
                    properties:
                      criterion_assessments:
                        items:
                          description: CriterionAssessment contains assessment for
                            a version
                          properties:
                            id:
                              description: Id of version
                              type: string
                            metric_id:
                              description: ID of metric
                              type: string
                            statistics:
                              description: Statistics for this metric
                              properties:
                                ratio_statitics:
                                  description: RatioStatistics is statistics for a
                                    ratio metric
                                  properties:
                                    credible_interval:
                                      description: Interval for probability
                                      properties:
                                        lower:
                                          format: float64
                                          type: number
                                        upper:
                                          format: float64
                                          type: number
                                      required:
                                      - lower
                                      - upper
                                      type: object
                                    improvement_over_baseline:
                                      description: Interval for probability
                                      properties:
                                        lower:
                                          format: float64
                                          type: number
                                        upper:
                                          format: float64
                                          type: number
                                      required:
                                      - lower
                                      - upper
                                      type: object
                                    probability_of_beating_baseline:
                                      format: float64
                                      type: number
                                    probability_of_being_best_version:
                                      format: float64
                                      type: number
                                  required:
                                  - credible_interval
                                  - improvement_over_baseline
                                  - probability_of_beating_baseline
                                  - probability_of_being_best_version
                                  type: object
                                value:
                                  format: float64
                                  type: number
                              type: object
                            threshold_assessment:
                              description: Assessment of how well this metric is doing
                                with respect to threshold. Defined only for metrics
                                with a threshold
                              properties:
                                probability_of_satisfying_threshold:
                                  description: Probability of satisfying the threshold.
                                    Defined only for ratio metrics. This is currently
                                    computed based on Bayesian estimation
                                  format: float64
                                  type: number
                                threshold_breached:
                                  description: A flag indicating whether threshold
                                    is breached
                                  type: boolean
                              required:
                              - probability_of_satisfying_threshold
                              - threshold_breached
                              type: object
                          required:
                          - id
                          - metric_id
                          type: object
                        type: array
                      id:
                        type: string
                      name:
                        description: name of version
                        type: string
                      request_count:
                        format: int32
                        type: integer
                      rollback:
                        description: A flag indicates whether traffic to this target
                          should be cutoff
                        type: boolean
                      weight:
                        description: Weight of traffic
                        format: int32
                        type: integer
                      win_probability:
                        format: float64
                        type: number
                    required:
                    - id
                    - name
                    - request_count
                    - weight
                    - win_probability
                    type: object
                  type: array
                winner:
                  description: Assessment for winner target if exists
                  properties:
                    current_winner:
                      description: ID of the current winner with the maximum probability
                        of winning. This is currently computed based on Bayesian estimation
                      type: string
                    winning_probability:
                      description: Posterior probability of the version declared as
                        the current winner. This is None if winner is None. This is
                        currently computed based on Bayesian estimation
                      format: float64
                      type: number
                    winning_version_found:
                      description: Indicates whether or not a clear winner has emerged
                        This is currently computed based on Bayesian estimation and
                        uses posterior_probability_for_winner from the iteration parameters
                      type: boolean
                  required:
                  - winning_version_found
                  type: object
              required:
              - baseline
              - candidates
              type: object
            conditions:
              description: List of conditions
              items:
                description: ExperimentCondition describes a condition of an experiment
                properties:
                  lastTransitionTime:
                    description: The time when this condition is last updated
                    format: date-time
                    type: string
                  message:
                    description: Detailed explanation on the update
                    type: string
                  name:
                    description: Type of the condition
                    type: string
                  reason:
                    description: Reason for the last update
                    type: string
                  status:
                    description: Status of the condition
                    type: string
                required:
                - name
                - status
                type: object
              type: array
            currentIteration:
              description: CurrentIteration is the current iteration number
              format: int32
              type: integer
            endTimestamp:
              description: EndTimestamp is the timestamp when experiment completes
              format: date-time
              type: string
            grafanaURL:
              description: GrafanaURL is the url to the Grafana Dashboard
              type: string
            initTimestamp:
              description: InitTimestamp is the timestamp when the experiment is initialized
              format: date-time
              type: string
            lastUpdateTime:
              description: LastUpdateTime is the last time iteration has been updated
              format: date-time
              type: string
            message:
              description: Message specifies message to show in the kubectl printer
              type: string
            phase:
              description: Phase marks the Phase the experiment is at
              type: string
            startTimestamp:
              description: StartTimestamp is the timestamp when the experiment starts
              format: date-time
              type: string
          type: object
      required:
      - spec
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: iter8-controller/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: iter8-controller-role
rules:
- apiGroups:
  - iter8.tools
  resources:
  - experiments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - iter8.tools
  resources:
  - experiments/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - serving.knative.dev
  resources:
  - services/status
  verbs:
  - get
- apiGroups:
  - serving.knative.dev
  resources:
  - revisions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - revisions/status
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---
# Source: iter8-controller/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: iter8-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: iter8-controller-role
subjects:
- kind: ServiceAccount
  name: iter8-controller
  namespace: iter8

---
# Source: iter8-controller/templates/default/manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: iter8-controller
  namespace: iter8
  labels:
    app: iter8-controller
spec:
  selector:
    app: iter8-controller
  ports:
  - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iter8-controller
  namespace: iter8
  labels:
    app: iter8-controller
spec:
  selector:
    matchLabels:
      app: iter8-controller
  template:
    metadata:
      labels:
        app: iter8-controller
    spec:
      serviceAccountName: iter8-controller
      containers:
      - name: iter8-controller
        image: "iter8/iter8-controller:master"
        imagePullPolicy: Always
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        command:
        - /manager
        resources:
          limits:
            cpu: 100m
            memory: 75Mi
          requests:
            cpu: 100m
            memory: 50Mi
          
      terminationGracePeriodSeconds: 10

