# Generated by make build-default; DO NOT EDIT
---
# Source: iter8-controller/templates/default/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: iter8

---
# Source: iter8-controller/templates/metrics/iter8_metrics.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: iter8-metrics
  namespace: iter8
data:
  query_templates: |-
    iter8_sample_size: "sum(increase(istio_requests_total{source_workload_namespace!='knative-serving',reporter='source'}[$interval]$offset_str)) by ($entity_labels)"
    iter8_latency: "(sum(increase(istio_request_duration_seconds_sum{source_workload_namespace!='knative-serving',reporter='source'}[$interval]$offset_str)) by ($entity_labels)) / (sum(increase(istio_request_duration_seconds_count{source_workload_namespace!='knative-serving',reporter='source'}[$interval]$offset_str)) by ($entity_labels))"
    iter8_error_count: "sum(increase(istio_requests_total{source_workload_namespace!='knative-serving',response_code=~'5..',reporter='source'}[$interval]$offset_str)) by ($entity_labels)"
    iter8_error_rate: "sum(increase(istio_requests_total{source_workload_namespace!='knative-serving',response_code=~'5..',reporter='source'}[$interval]$offset_str)) by ($entity_labels) / sum(increase(istio_requests_total{source_workload_namespace!='knative-serving',reporter='source'}[$interval]$offset_str)) by ($entity_labels)"
  metrics: |-
    - name: iter8_latency
      metric_type: Performance
      sample_size_query_template: iter8_sample_size
    - name: iter8_error_count
      metric_type: Correctness
      sample_size_query_template: iter8_sample_size
    - name: iter8_error_rate
      metric_type: Correctness
      sample_size_query_template: iter8_sample_size


---
# Source: iter8-controller/templates/default/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-manager
  namespace: iter8

---
# Source: iter8-controller/templates/crds/iter8_v1alpha1_experiment.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: experiments.iter8.tools
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase of the experiment
    format: byte
    name: phase
    type: string
  - JSONPath: .status.message
    description: Detailed Status of the experiment
    format: byte
    name: status
    type: string
  - JSONPath: .spec.targetService.baseline
    description: Name of baseline
    format: byte
    name: baseline
    type: string
  - JSONPath: .status.trafficSplitPercentage.baseline
    description: Traffic percentage for baseline
    format: int32
    name: percentage
    type: integer
  - JSONPath: .spec.targetService.candidate
    description: Name of candidate
    format: byte
    name: candidate
    type: string
  - JSONPath: .status.trafficSplitPercentage.candidate
    description: Traffic percentage for candidate
    format: int32
    name: percentage
    type: integer
  group: iter8.tools
  names:
    categories:
    - all
    - iter8
    kind: Experiment
    plural: experiments
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        metrics:
          type: object
        spec:
          properties:
            analysis:
              description: Analysis parameters
              properties:
                analyticsService:
                  description: AnalyticsService endpoint
                  type: string
                grafanaEndpoint:
                  description: Grafana Dashboard endpoint
                  type: string
                successCriteria:
                  description: List of criteria for assessing the candidate version
                  items:
                    properties:
                      metricName:
                        description: 'Name of the metric to which the criterion applies.
                          Options:'
                        type: string
                      sampleSize:
                        description: Minimum number of data points required to make
                          a decision based on this criterion; If not specified, the
                          default value is 10
                        format: int64
                        type: integer
                      stopOnFailure:
                        description: Indicates whether or not the experiment must
                          finish if this criterion is not satisfied; defaults to false
                        type: boolean
                      tolerance:
                        description: Value to check
                        format: double
                        type: number
                      toleranceType:
                        description: "\tTolerance type. Options: \"delta\": compares
                          the candidate against the baseline version with respect
                          to the metric; \"threshold\": checks the candidate with
                          respect to the metric"
                        enum:
                        - threshold
                        - delta
                        type: string
                    required:
                    - metricName
                    - toleranceType
                    - tolerance
                    type: object
                  type: array
              type: object
            assessment:
              description: Assessment is a flag to terminate experiment with action
              enum:
              - override_success
              - override_failure
              type: string
            routingReference:
              description: RoutingReference provides references to routing rules set
                by users
              type: object
            targetService:
              description: TargetService is a reference to an object to use as target
                service
              properties:
                baseline:
                  description: Baseline tells the name of baseline
                  type: string
                candidate:
                  description: Candidate tells the name of candidate
                  type: string
              type: object
            trafficControl:
              description: TrafficControl defines parameters for controlling the traffic
              properties:
                interval:
                  description: Interval is the time in second before the next increment.
                    Default is 1mn
                  type: string
                maxIterations:
                  description: Maximum number of iterations for this experiment. Default
                    to 100.
                  format: int64
                  type: integer
                maxTrafficPercentage:
                  description: MaxTrafficPercentage is the maximum traffic ratio to
                    send to the candidate. Default is 50
                  format: double
                  type: number
                onSuccess:
                  description: 'Determines how the traffic must be split at the end
                    of the experiment; options: "baseline": all traffic goes to the
                    baseline version; "candidate": all traffic goes to the candidate
                    version; "both": traffic is split across baseline and candidate.
                    Defaults to “candidate”'
                  enum:
                  - baseline
                  - candidate
                  - both
                  type: string
                strategy:
                  description: 'Strategy is the strategy used for experiment. Options:
                    "check_and_increment": get decision on traffic increament from
                    analytics "increment_without_check": increase traffic each interval
                    without calling analytics'
                  enum:
                  - check_and_increment
                  - increment_without_check
                  type: string
                trafficStepSize:
                  description: TrafficStepSize is the traffic increment per interval.
                    Default is 2.0
                  format: double
                  type: number
              type: object
          required:
          - targetService
          type: object
        status:
          properties:
            analysisState:
              description: AnalysisState is the last analysis state
              type: object
            assessment:
              description: AssessmentSummary returned by the last analyis
              properties:
                conclusions:
                  description: Overall summary based on all success criteria
                  items:
                    type: string
                  type: array
              type: object
            conditions:
              description: Conditions the latest available observations of a resource's
                current state. +patchMergeKey=type +patchStrategy=merge
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                      +required
                    type: string
                  type:
                    description: Type of condition. +required
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            currentIteration:
              description: CurrentIteration is the current iteration number
              format: int64
              type: integer
            endTimestamp:
              description: EndTimestamp is the timestamp when experiment completes
              type: string
            grafanaURL:
              description: GrafanaURL is the url to the Grafana Dashboard
              type: string
            lastIncrementTime:
              description: LastIncrementTime is the last time the traffic has been
                incremented
              format: date-time
              type: string
            message:
              description: Message specifies message to show in the kubectl printer
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            phase:
              description: Phase marks the Phase the experiment is at
              type: string
            startTimestamp:
              description: StartTimestamp is the timestamp when the experiment starts
              type: string
            trafficSplitPercentage:
              description: TrafficSplit tells the current traffic spliting between
                baseline and candidate
              properties:
                baseline:
                  format: int64
                  type: integer
                candidate:
                  format: int64
                  type: integer
              required:
              - baseline
              - candidate
              type: object
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: iter8-controller/templates/rbac/rbac_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - iter8.tools
  resources:
  - experiments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - iter8.tools
  resources:
  - experiments/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - networking.istio.io
  resources:
  - destinationrules
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - serving.knative.dev
  resources:
  - services/status
  verbs:
  - get
- apiGroups:
  - serving.knative.dev
  resources:
  - revisions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - revisions/status
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete

---
# Source: iter8-controller/templates/rbac/rbac_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: iter8

---
# Source: iter8-controller/templates/default/manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: controller-manager-service
  namespace: iter8
  labels:
    control-plane: controller-manager
spec:
  selector:
    control-plane: controller-manager
  ports:
  - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: iter8
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      serviceAccountName: controller-manager
      containers:
      - command:
        - /manager
        image: "fabolive/iter8-controller:0.1.0"
        imagePullPolicy: Always
        name: manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10

