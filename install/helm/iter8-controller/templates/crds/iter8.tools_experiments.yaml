
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: experiments.iter8.tools
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    description: Phase of the experiment
    format: byte
    name: phase
    type: string
  - JSONPath: .status.message
    description: Detailed Status of the experiment
    format: byte
    name: status
    type: string
  - JSONPath: .spec.targetService.baseline
    description: Name of baseline
    format: byte
    name: baseline
    type: string
  - JSONPath: .status.trafficSplitPercentage.baseline
    description: Traffic percentage for baseline
    format: int32
    name: percentage
    type: integer
  - JSONPath: .spec.targetService.candidate
    description: Name of candidate
    format: byte
    name: candidate
    type: string
  - JSONPath: .status.trafficSplitPercentage.candidate
    description: Traffic percentage for candidate
    format: int32
    name: percentage
    type: integer
  group: iter8.tools
  names:
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Experiment is the Schema for the experiments API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        metrics:
          additionalProperties:
            description: ExperimentMetric stores details of a metric query template
              to
            properties:
              absent_value:
                description: AbsentValue  is default value when data source does not
                  provide a value
                type: string
              is_counter:
                description: IsCounter indicates metric is a monotonically increasing
                  counter
                type: boolean
              query_template:
                description: QueryTemplate is the query template for metric
                type: string
              sample_size_template:
                description: SampleSizeTemplate is the query template for sample size
                type: string
            required:
            - absent_value
            - is_counter
            - query_template
            - sample_size_template
            type: object
          description: ExperimentMetrics is a map from metric name to metric definition
          type: object
        spec:
          description: ExperimentSpec defines the desired state of Experiment
          properties:
            analysis:
              description: Analysis parameters
              properties:
                analyticsService:
                  description: AnalyticsService endpoint
                  type: string
                grafanaEndpoint:
                  description: Grafana Dashboard endpoint
                  type: string
                reward:
                  description: The reward used by analytics to assess candidate
                  properties:
                    metricName:
                      description: 'Name of the metric to which the criterion applies.
                        Options:'
                      type: string
                    min_max:
                      description: Minimum and maximum values of the metric
                      properties:
                        max:
                          description: Max maximum possible value of the metric
                          format: float64
                          type: number
                        min:
                          description: Min minimum possible value of the metric
                          format: float64
                          type: number
                      required:
                      - max
                      - min
                      type: object
                  required:
                  - metricName
                  type: object
                successCriteria:
                  description: List of criteria for assessing the candidate version
                  items:
                    description: SuccessCriterion specifies the criteria for an experiment
                      to succeed
                    properties:
                      metricName:
                        description: 'Name of the metric to which the criterion applies.
                          Options:'
                        type: string
                      min_max:
                        description: Minimum and maximum values of the metric
                        properties:
                          max:
                            description: Max maximum possible value of the metric
                            format: float64
                            type: number
                          min:
                            description: Min minimum possible value of the metric
                            format: float64
                            type: number
                        required:
                        - max
                        - min
                        type: object
                      sampleSize:
                        description: Minimum number of data points required to make
                          a decision based on this criterion; If not specified, the
                          default value is 10
                        type: integer
                      stopOnFailure:
                        description: Indicates whether or not the experiment must
                          finish if this criterion is not satisfied; defaults to false
                        type: boolean
                      tolerance:
                        description: Value to check
                        format: float64
                        type: number
                      toleranceType:
                        description: "\tTolerance type. Options: \"delta\": compares
                          the candidate against the baseline version with respect
                          to the metric; \"threshold\": checks the candidate with
                          respect to the metric"
                        enum:
                        - threshold
                        - delta
                        type: string
                    required:
                    - metricName
                    - tolerance
                    - toleranceType
                    type: object
                  type: array
              type: object
            assessment:
              description: Assessment is a flag to terminate experiment with action
              enum:
              - override_success
              - override_failure
              type: string
            cleanup:
              description: CleanUp is a flag to determine the action to take at the
                end of experiment
              enum:
              - delete
              type: string
            routingReference:
              description: RoutingReference provides references to routing rules set
                by users
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            targetService:
              description: TargetService is a reference to an object to use as target
                service
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                baseline:
                  description: Baseline tells the name of baseline
                  type: string
                candidate:
                  description: Candidate tells the name of candidate
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            trafficControl:
              description: TrafficControl defines parameters for controlling the traffic
              properties:
                confidence:
                  description: The required confidence in the recommeded traffic split.
                    Defaults to 0.95
                  format: float64
                  type: number
                interval:
                  description: Interval is the time in second before the next increment.
                    Default is 1mn
                  type: string
                maxIterations:
                  description: Maximum number of iterations for this experiment. Default
                    to 100.
                  type: integer
                maxTrafficPercentage:
                  description: MaxTrafficPercentage is the maximum traffic ratio to
                    send to the candidate. Default is 50
                  format: float64
                  type: number
                onSuccess:
                  description: 'Determines how the traffic must be split at the end
                    of the experiment; options: "baseline": all traffic goes to the
                    baseline version; "candidate": all traffic goes to the candidate
                    version; "both": traffic is split across baseline and candidate.
                    Defaults to “candidate”'
                  enum:
                  - baseline
                  - candidate
                  - both
                  type: string
                strategy:
                  description: 'Strategy is the strategy used for experiment. Options:
                    "check_and_increment": get decision on traffic increament from
                    analytics "increment_without_check": increase traffic each interval
                    without calling analytics'
                  enum:
                  - check_and_increment
                  - increment_without_check
                  - epsilon_greedy
                  - posterior_bayesian_routing
                  - optimistic_bayesian_routing
                  type: string
                trafficStepSize:
                  description: TrafficStepSize is the traffic increment per interval.
                    Default is 2.0
                  format: float64
                  type: number
              type: object
          required:
          - targetService
          type: object
        status:
          description: ExperimentStatus defines the observed state of Experiment
          properties:
            analysisState:
              description: AnalysisState is the last analysis state
              type: object
            assessment:
              description: AssessmentSummary returned by the last analyis
              properties:
                abort_experiment:
                  description: Indicates whether or not the experiment must be aborted
                    based on the success criteria
                  type: boolean
                all_success_criteria_met:
                  description: Indicates whether or not all success criteria for assessing
                    the candidate version have been met
                  type: boolean
                conclusions:
                  description: Overall summary based on all success criteria
                  items:
                    type: string
                  type: array
                success_criteria:
                  description: The list of status for all success criteria applied
                  items:
                    description: SuccessCriterionStatus contains assessment for a
                      specific success criteria
                    properties:
                      abort_experiment:
                        description: Indicates whether or not the experiment must
                          be aborted on the basis of the criterion for this metric
                        type: boolean
                      conclusions:
                        description: Assessment of this success criteria in plain
                          English
                        items:
                          type: string
                        type: array
                      metric_name:
                        description: 'Name of the metric to which the criterion applies
                          example: iter8_latency'
                        type: string
                      success_criterion_met:
                        description: Indicates whether or not the success criterion
                          for the corresponding metric has been met
                        type: boolean
                    required:
                    - abort_experiment
                    - conclusions
                    - metric_name
                    - success_criterion_met
                    type: object
                  type: array
              type: object
            conditions:
              description: Conditions the latest available observations of a resource's
                current state.
              items:
                description: 'Conditions defines a readiness condition for a Knative
                  resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    properties:
                      inner:
                        format: date-time
                        type: string
                    required:
                    - inner
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            createTimestamp:
              description: CreateTimestamp is the timestamp when the experiment is
                created
              format: int64
              type: integer
            currentIteration:
              description: CurrentIteration is the current iteration number
              type: integer
            endTimestamp:
              description: EndTimestamp is the timestamp when experiment completes
              format: int64
              type: integer
            grafanaURL:
              description: GrafanaURL is the url to the Grafana Dashboard
              type: string
            lastIncrementTime:
              description: LastIncrementTime is the last time the traffic has been
                incremented
              format: date-time
              type: string
            message:
              description: Message specifies message to show in the kubectl printer
              type: string
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
            phase:
              description: Phase marks the Phase the experiment is at
              type: string
            startTimestamp:
              description: StartTimestamp is the timestamp when the experiment starts
              format: int64
              type: integer
            trafficSplitPercentage:
              description: TrafficSplit tells the current traffic spliting between
                baseline and candidate
              properties:
                baseline:
                  type: integer
                candidate:
                  type: integer
              required:
              - baseline
              - candidate
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
